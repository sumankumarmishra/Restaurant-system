
@model Restugrp07.Models.ProductVM
@{
    ViewBag.Title = "Add Product";
}

<div>
   



    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">
            @TempData["Success"]
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-error">
            @TempData["Error"]
        </div>
    }
    @using (Html.BeginForm("AddProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" id="kk">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
           


            <script>
                var input = document.getElementById("kk");
                input.addEventListener("keyup", function (event) {
                    event.preventDefault();
                    if (event.keyCode === 190) {
                        alert("please use , Acomma insted of fullstop .");
                    }

                });

            </script>

            <div class="form-group">
                @Html.Label("Item info", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.Label("Price: R", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2" for="HasSidebar">Category</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CategoryId, Model.Categories, "Select Category", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Qty", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-md-2" for="HasSidebar">Product Picture</label>
                <div class="col-md-10">
                    <input type="file" name="file" id="ImageUpload" />
                    <img id="imgpreview" src="#" />
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add Product" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
</div>


    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>CKEDITOR.replace("Description")</script>
    <script>
        $(function () {
            /*
            Preview Selected Image
            */

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $("img#imgpreview").attr("src", e.target.result).width(200).height(200);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#ImageUpload").change(function () {

                readURL(this);
            });
            ///////////////////////////////////


        });



    </script>
