@model Restugrp07.Models.Partrequest

@{
    ViewBag.Title = "RequestDetails";
}

<h2>Request Details</h2>

@if (TempData["Error"] != null)
{
    <div align="center" class="alert-danger">
        <h5>@TempData["Error"]</h5>
    </div>
}
@if (TempData["Sucess"] != null)
{
    <div align="center" class="alert-success">
        <h5>@TempData["Error"]</h5>
    </div>
}

<div>
    <h4>Part request</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Useremail)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Useremail)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Partnumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Partnumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Partimage)
        </dt>

        <dd>
            <a href="/Images/Uploads/Parts/@Model.Id/@Model.Partimage">
                <img src="~/Images/Uploads/Parts/@Model.Id/@Model.Partimage" style="width:100px;height:80px" />
            </a>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Partcarmodel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Partcarmodel)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>


        <dt>
            @Html.DisplayNameFor(model => model.Condition)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Condition)
        </dd>

    </dl>
</div>



<br />


<h2>Process Request</h2>

@using (Html.BeginForm("Processrequest", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        @Html.HiddenFor(model => model.Id)


        <div class="form-group">
            @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Condition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Request Feedback Message", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Feedback, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Feedback, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.Label("Process Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Statusnum" required>
                    <option value="2">Looking For Requested part</option>
                    <option value="3">Requested Part Avilable</option>
                    <option value="4">Part not Avilable</option>
                    <option value="10">We dont Sell this item</option>
                </select>
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>


        <script src="~/Scripts/ckeditor/ckeditor.js"></script>
        <script>CKEDITOR.replace("Feedback")</script>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-success" />
            </div>
        </div>
    </div>
}
