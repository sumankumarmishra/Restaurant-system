
@model IEnumerable<Restugrp07.Models.OrdersForUserVM>


<br />
<br />
<br />

<div class="rectangle" style="margin-left:6px;padding-right:12px;color:black;">
    <div align="center"><h3>PAYMENT</h3> </div>
    <div align="center">
        @if (!Model.Any())
        {
            <h3 class="text-center"> You have no orders.</h3>
        }
        else
        {
            <table class="table">
                <tr>
                    <th>
                        Order
                    </th>
                    <th>
                        Products
                    </th>


                    <th>
                        Total
                    </th>
                </tr>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderNumber)
                        </td>
                        <td>
                            @if (item.Product2Id == 0)
                            {
                                foreach (var item2 in item.ProductsAndQty)
                                {
                                    @item2.Key @:x @item2.Value <br />




                                }
                            }
                            else
                            {
                                <h6>
                                    Request Part
                                </h6>
                            }


                        </td>

                        <td id="Total">
                            R:@Html.DisplayFor(modelItem => item.Total)

                        </td>

                    </tr>
                    TempData["totalprice"] = item.Total;

                }
            </table>
        }

    </div>
    <br />

    @foreach (var item in Model)
    {

        if (item.Destination != "TOBECOLLECTED" && item.DeliveryFee > 1)
        {
            <div align="center" style="color:black"><h3> DELIVERY FEE:R @item.DeliveryFee </h3></div>
        }
    }

    @if (ViewBag.Bal != "0")
    {
        <div align="center">
            @foreach (var item in Model)
            {

                if (item.Destination != "TOBECOLLECTED" && item.DeliveryFee < 1)
                {
                    <div id="deldiv">
                        <br />
                        <h3>
                            CALCULATING DESTANCE AND DELIVERY FEE
                        </h3>
                    </div>
                }
            }



            <p>
                <br />
            </p>


            <div id="paypal-button-container"></div>
            <!-- Include the PayPal JavaScript SDK -->
            <script src="https://www.paypal.com/sdk/js?client-id=test&currency=USD"></script>
            <script>
                    // Render the PayPal button into #paypal-button-container
                    paypal.Buttons({

                        // Set up the transaction
                        createOrder: function (data, actions) {
                            return actions.order.create({
                                purchase_units: [{
                                    amount: {
                                        value: (@TempData["totalprice"].ToString() * 0.066).toFixed(2)
                                    }
                                }]
                            });
                        },

                        // Finalize the transaction
                        onApprove: function (data, actions) {
                            return actions.order.capture().then(function (orderData) {
                                // Successful capture! For demo purposes:
                                console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));
                                var transaction = orderData.purchase_units[0].payments.captures[0];
                                alert('Transaction ' + transaction.status + ': ' + transaction.id + '\n\nSee console for all available details');

                                window.location.replace("/home/DeductQuantity");
                            });
                        }


                    }).render('#paypal-button-container');
            </script>


        </div>
    }

    <br />
    <br />
</div>


@foreach (var item in Model)
{

    if (item.Destination != "TOBECOLLECTED" && item.DeliveryFee == 0)
    {






        <div class="row">
            <div class="col-md-12">
                <div>
                    <form>
                        <div class="form-group">
                            <input id="travelfrom" type="text" value="illovu township, 4126 Amanzimtoti South Africa C4004" name="name" class="form-control" style="width:500px;display:none" disabled="disabled" />
                        </div>
                        <div class="form-group">
                            <input id="travelto" type="text" name="name" value="@Model.FirstOrDefault().Destination" class="form-control" style="width:500px;display:none" disabled="disabled" />
                        </div>
                    </form>
                    <div>
                        <div id="dvDistance" style="font-size:20px; color:black"></div>
                    </div>
                </div>

                <div id="dvMap" style="min-height:200px;width:100%"></div>
            </div>
        </div>

        <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
        <!--ENSURE YOU CHANGE TO YOUR OWN API KEY HERE !!! -->
        <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyAYgA0WDcNBnR7ewQIWEqUbNmDUdnHCL9M" type="text/javascript"></script>


        <!-- code for example 1 -->
        <script>

            var source, destination;
            var tr = "@Model.FirstOrDefault().Destination";
            var directionsDisplay;
            var directionsService = new google.maps.DirectionsService();

            // initialise the location of the map on Chichester in England (ref lat and lng)
            var map = new google.maps.Map(document.getElementById('dvMap'), {
                center: { lat: -29.856349, lng: 31.003004 },
                zoom: 13,
                mapTypeId: 'roadmap'
            });

            google.maps.event.addDomListener(window, 'load', function () {
                new google.maps.places.SearchBox(document.getElementById('travelfrom'));
                new google.maps.places.SearchBox(document.getElementById('travelto'));
                directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
            });
            window.onload = function () {
                setTimeout(GetRoute, 3000);
            }
            function GetRoute() {


                directionsDisplay.setMap(map);
                source = document.getElementById("travelfrom").value;
                destination = document.getElementById("travelto").value;

                var request = {
                    origin: source,
                    destination: destination,
                    travelMode: google.maps.TravelMode.DRIVING
                };

                directionsService.route(request, function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        directionsDisplay.setDirections(response);
                    }
                });

                //*********DISTANCE AND DURATION**********************//
                var service = new google.maps.DistanceMatrixService();
                service.getDistanceMatrix({
                    origins: [source],
                    destinations: [destination],
                    travelMode: google.maps.TravelMode.DRIVING,
                    unitSystem: google.maps.UnitSystem.METRIC,
                    avoidHighways: false,
                    avoidTolls: false
                }, function (response, status) {

                    if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                        var distance = response.rows[0].elements[0].distance.text;
                        var duration = response.rows[0].elements[0].duration.value;
                        var dvDistance = document.getElementById("dvDistance");
                        duration = parseFloat(duration / 60).toFixed(2);
                        dvDistance.innerHTML = "";
                        dvDistance.innerHTML += "Distance: " + distance + "<br />";
                        dvDistance.innerHTML += "Time:" + duration + " min";

                        var del = document.getElementById('deldiv');


                        window.location.replace("/home/DeliveryFee?id=@item.OrderNumber&dist=" + distance);

                        //del.style.display = "none";



                    } else {
                        alert("Unable to calculate the distance for this road");
                    }
                });
            }

        </script>
        <hr />


    }
}




